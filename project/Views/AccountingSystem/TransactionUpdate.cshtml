@model project.Models.TransactionData

@{
    ViewBag.Title = "Update Transaction Data";
}

<h1>
    編輯
</h1>
<hr />

<a class="btn btn-secondary" href="@Url.Action("AccountBookData", "AccountingSystem", new { id = Model.AccountBookId })">
    返回
</a>
<br>

@using (Html.BeginForm("TransactionUpdateSave", "AccountingSystem", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.TransactionId)

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.TransactionId)
        @Html.HiddenFor(model => model.AccountBookId)

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("Date", Model.Date.ToString("yyyy-MM-ddTHH:mm"), new { @class = "form-control", type = "datetime-local" })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Category, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Description, new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Amount, new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Currency, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="Currency" name="Currency" class="form-select" style="width: 200px;">
                    <option value="TWD">新台幣 (TWD)</option>
                    <option value="USD">美元 (USD)</option>
                    <option value="EUR">歐元 (EUR)</option>
                    <option value="JPY">日圓 (JPY)</option>
                </select>
                @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <label class="checkbox-inline">
                    @Html.CheckBoxFor(model => model.IncludeInBudget)
                    @Html.DisplayNameFor(model => model.IncludeInBudget)
                </label>
                @Html.ValidationMessageFor(model => model.IncludeInBudget, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="儲存" class="btn btn-primary" onclick="return confirmSave();" />
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    function confirmSave() {
        return confirm("確定要儲存變更嗎？");
    }
</script>